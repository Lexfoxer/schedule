// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var TelegramBot, create_send_message, generation_event_new_messages, lessons, lessons_to_string, my_date, out_string, tb, token;

  lessons = require('./lessons');

  my_date = require('./my_date');

  TelegramBot = require('node-telegram-bot-api');

  token = '';

  tb = new TelegramBot(token, {
    polling: true
  });

  tb.on('message', function(msg) {
    var chatId, nDate;
    chatId = msg.chat.id;
    nDate = new Date();
    switch (msg.text.toLowerCase()) {
      case 'позавчера':
        return generation_event_new_messages(chatId, new Date(nDate.getTime() - (1000 * 60 * 60 * 24 * 2)));
      case 'вчера':
        return generation_event_new_messages(chatId, new Date(nDate.getTime() - (1000 * 60 * 60 * 24)));
      case 'сегодня':
        return generation_event_new_messages(chatId, new Date());
      case 'завтра':
        return generation_event_new_messages(chatId, new Date(nDate.getTime() + (1000 * 60 * 60 * 24)));
      case 'послезавтра':
        return generation_event_new_messages(chatId, new Date(nDate.getTime() + (1000 * 60 * 60 * 24 * 2)));
      default:
        return generation_event_new_messages(chatId, msg.text);
    }
  });

  generation_event_new_messages = function(chatId, in_mess) {
    return my_date.to_date(in_mess, function(err, out_date) {
      if (err) {
        tb.sendMessage(chatId, '<b>' + err + '</b>', {
          parse_mode: "HTML"
        });
        throw err;
      }
      return lessons.day(out_date.dayWeek, function(err, obj_day) {
        if (err) {
          tb.sendMessage(chatId, '<b>' + err + '</b>', {
            parse_mode: "HTML"
          });
          throw err;
        }
        if (obj_day.army) {
          return create_send_message(chatId, out_date, '<b>8:30 - 17:00</b>\nВоенная кафедра');
        }
        return lessons_to_string(chatId, obj_day.lessons, out_date.evenWeek, out_date.codeWeek, function(err, data) {
          if (err) {
            tb.sendMessage(chatId, '<b>' + err + '</b>', {
              parse_mode: "HTML"
            });
            throw err;
          }
          return create_send_message(chatId, out_date, data);
        });
      });
    });
  };

  lessons_to_string = function(chatId, array_data, even_week, code_week, callback) {
    var i, key, len, str_message_lessons;
    str_message_lessons = '';
    for (i = 0, len = array_data.length; i < len; i++) {
      key = array_data[i];
      if (key.even_week === even_week) {
        if (key.start_week <= code_week || key.start_week === void 0) {
          if (key.number_week.length === 0 || key.number_week.indexOf(code_week) >= 0) {
            out_string(key, function(data) {
              return str_message_lessons += data;
            });
          }
        }
      }
    }
    if (str_message_lessons !== "") {
      return callback(null, str_message_lessons);
    } else {
      return callback(null, 'Пар нет, отдыхай');
    }
  };

  out_string = function(key, callback) {
    var ret;
    ret = "<b>" + my_date.dic_timeLessons[key.number_lesson] + "</b>\n" + key.title + ", " + key.class_room + "\n<b>--------------------</b>\n";
    if (ret !== "") {
      return callback(ret);
    }
  };

  create_send_message = function(chatId, out_date, data) {
    var message;
    message = ("<b>" + (out_date.newDate.getDate()) + " " + my_date.dic_month[out_date.newDate.getMonth()] + "\n" + my_date.dic_date[out_date.dayWeek] + ", " + out_date.codeWeek + " неделя</b>\n\n") + data;
    return tb.sendMessage(chatId, message, {
      parse_mode: "HTML"
    });
  };

}).call(this);
